{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/buithihongnhung/todo-list/src/components/ToDoItem/index.js\",\n    _s = $RefreshSig$();\n\nimport './ToDoItem.css';\nimport React, { useState } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport NewTask from '../NewTask';\nimport PropTypes from 'prop-types';\n\nconst ToDoItem = props => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const [isOpenDetail, setIsOpenDetail] = useState(false);\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n    isSelected();\n  };\n\n  const isSelected = () => {\n    return props.isSelected(checked);\n  };\n\n  const handleDetail = () => {\n    setIsOpenDetail(true);\n  };\n\n  const renderDetail = () => {\n    if (isOpenDetail) {\n      return /*#__PURE__*/_jsxDEV(NewTask, {\n        isToDoItem: false,\n        nameTask: 'Do homework'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    } else return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-name\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checked,\n          onChange: handleChange,\n          color: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Do homework\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          id: \"btn-detail\",\n          onClick: handleDetail,\n          children: \"Detail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          id: \"btn-remove\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), renderDetail()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDoItem, \"DueFwAkSZlREMSuTo6Ihawtkzv8=\");\n\n_c = ToDoItem;\nToDoItem.propTypes = {\n  isSelected: PropTypes.func.isRequired\n};\nexport default ToDoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"sources":["/Users/buithihongnhung/todo-list/src/components/ToDoItem/index.js"],"names":["React","useState","Checkbox","Typography","Button","NewTask","PropTypes","ToDoItem","props","checked","setChecked","isOpenDetail","setIsOpenDetail","handleChange","event","target","isSelected","handleDetail","renderDetail","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC5BJ,IAAAA,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaN,OAAd,CAAV;AACAO,IAAAA,UAAU;AACb,GAHD;;AAKA,QAAMA,UAAU,GAAG,MAAM;AACrB,WAAOR,KAAK,CAACQ,UAAN,CAAiBP,OAAjB,CAAP;AACH,GAFD;;AAIA,QAAMQ,YAAY,GAAG,MAAM;AACvBL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AACvB,QAAIP,YAAJ,EAAkB;AACd,0BAAO,QAAC,OAAD;AAAS,QAAA,UAAU,EAAE,KAArB;AAA4B,QAAA,QAAQ,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,OAAO,IAAP;AACV,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI,QAAC,QAAD;AACI,UAAA,OAAO,EAAEF,OADb;AAEI,UAAA,QAAQ,EAAEI,YAFd;AAGI,UAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,EAAE,EAAC,YAA9B;AAA2C,UAAA,OAAO,EAAEI,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,EAAE,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAgBKC,YAAY,EAhBjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA3CD;;GAAMX,Q;;KAAAA,Q;AA6CNA,QAAQ,CAACY,SAAT,GAAqB;AACjBH,EAAAA,UAAU,EAAEV,SAAS,CAACc,IAAV,CAAeC;AADV,CAArB;AAKA,eAAed,QAAf","sourcesContent":["import './ToDoItem.css';\nimport React, { useState } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport NewTask from '../NewTask';\nimport PropTypes from 'prop-types';\n\nconst ToDoItem = (props) => {\n    const [checked, setChecked] = useState(false);\n    const [isOpenDetail, setIsOpenDetail] = useState(false);\n\n    const handleChange = (event) => {\n        setChecked(event.target.checked);\n        isSelected();\n    };\n\n    const isSelected = () => {\n        return props.isSelected(checked);\n    };\n\n    const handleDetail = () => {\n        setIsOpenDetail(true);\n    };\n\n    const renderDetail = () => {\n        if (isOpenDetail) {\n            return <NewTask isToDoItem={false} nameTask={'Do homework'}/>;\n        } else return null;\n    };\n\n    return (\n        <div className=\"todo-item\">\n            <div className=\"box-todo\">\n                <div className=\"check-name\">\n                    <Checkbox\n                        checked={checked}\n                        onChange={handleChange}\n                        color=\"default\"\n                    />\n                    <Typography>Do homework</Typography>\n                </div>\n                <div className=\"btn\">\n                    <Button variant=\"outlined\" id=\"btn-detail\" onClick={handleDetail}>Detail</Button>\n                    <Button variant=\"outlined\" id=\"btn-remove\">Remove</Button>\n\n                </div>\n            </div>\n            {renderDetail()}\n        </div>\n    );\n};\n\nToDoItem.propTypes = {\n    isSelected: PropTypes.func.isRequired,\n\n};\n\nexport default ToDoItem;\n"]},"metadata":{},"sourceType":"module"}